getwd()
fileURL <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileURL, destfile="q1.csv")
list.files("./Documents")
load.csv(q1.csv)
read.csv(q1.csv)
getwd()
read.csv("q1.csv")
q1[VAL]
q1
q1 <- read.csv("q1.csv")
q1$val
q1$VAL
q1$VAL = 24
head(q1$VAL)
q1 <- read.csv("q1.csv")
head(q1$VAL)
library(pylr)
download.package(pylr)
install.packages("pylr")
q1bis <- q1[,q1$val=24$]
q1bis <- q1[,q1$val=24]
q1bis <- q1[,q1$VAL=24]
q2 <- data.table(q1)
library(data.table)
install.packages(data.table)
install.packages(data.table_1.9.4.tar.gz)
install.packages("data.table")
q2 <- data.table(q1)
library(data.table)
q2 <- data.table(q1)
head(q2)
data.table[,.N,VAL]
data.table[,.N,by=VAL]
q[,.N,by=VAL]
q1[,.N,by=VAL]
q2[,.N,by=VAL]
head(q1$fes)
head(q1$FES)
fileURL <-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileURL)
download.file(fileURL, destfile="q3.xlsx")
colIndex <- 7:15
rowIndex <- 18-23
read.xlsx("q3.xlsx",sheetIndex=1,colIndex=colIndex, rowIndex = rowIndex)
install.packages("xlsx")
library("xlsx")
read.xlsx("q3.xlsx",sheetIndex=1,colIndex=colIndex, rowIndex = rowIndex)
download.file(fileURL, destfile="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx")
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileURL, destfile="q3.xlsx")
read.xlsx("q3.xlsx",sheetIndex=1,colIndex=colIndex, rowIndex = rowIndex)
read.xlsx("q33.xlsx",sheetIndex=1,colIndex=colIndex, rowIndex = rowIndex)
q3 <- read.xlsx("q33.xlsx",sheetIndex=1,colIndex=colIndex, rowIndex = rowIndex)
q3
head(Q3)
head(q3)
dat <- q3
sum(dat$Zip*dat$Ext,na.rm=T)
colIndex
rowIndex
rowIndex <- 18-23
rowIndex <- 18:23
dat <- read.xlsx("q33.xlsx",sheetIndex=1,colIndex=colIndex, rowIndex = rowIndex)
sum(dat$Zip*dat$Ext,na.rm=T)
install.packages("XML")
library(XML)
fileURL <-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl, useInternal=TRUE)
doc <- xmlTreeParse(fileURL, useInternal=TRUE)
install.packages("RCurl")
library(RCurl)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
xData <- getURL(fileURL)
xData <- getURL(fileURL, ssl.verifypeer = FALSE)
doc <- xmlParse(xData)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
xpathSApply(rootNode, node[@zipcode='21231'],xmlValue)
names(rootNode)
names(rootNode[[1]])
xmlName(rootNode)
names(response)
rootNode <- xmlRoot(doc)
names(response)
xpathSApply(rootNode, //zipcode,xmlValue)
xpathSApply(rootNode, "node[@zipcode='21231']",xmlValue)
test <- xpathSApply(rootNode, "node[@zipcode='21231']",xmlValue)
test
test <- xpathSApply(rootNode, //zipcode,xmlValue)
test <- xpathSApply(rootNode,"//zipcode",xmlValue)
test
test
head(test)
count(test=21231)
data.table(test)
?pylr
test2 <- data.table(test)
test2=21231
test2 <- data.table(test)
tables(test2)
head(test2)
test[test[,1]==21231,]
test[test$1==21231,]
test2[test2$test==21231,]
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileURL, destfile="dt.csv")
file <- read.csv("dt.csv")
DT <- fread(file)
getwd()
DT <- read("C:/Users/Geo Intelligence/Documents/dt.csv")
DT <- fread("C:/Users/Geo Intelligence/Documents/dt.csv")
system.time(mean(DT$pwgtp15,by=DT$SEX))
mean(DT$pwgtp15,by=DT$SEX)
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
mean(DT$pwgtp15,by=DT$SEX)
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time(rowMeans(DT)[DT$SEX==1])
rowMeans(DT)[DT$SEX==1]
head(DT)
DT <- data.table(DT)
mean(DT$pwgtp15,by=DT$SEX)
system.time(mean(DT$pwgtp15,by=DT$SEX))
sapply(split(DT$pwgtp15,DT$SEX),mean)
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
mean(DT[DT$SEX==1,]$pwgtp15)
system.time(mean(DT[DT$SEX==1,]$pwgtp15))
system.time(mean(DT[DT$SEX==2,]$pwgtp15))
system.time(rowMeans(DT)[DT$SEX==1])
system.time(rowMeans(DT)[DT$SEX==2])
system.time(DT[,mean(pwgtp15),by=SEX])
hist(subdata$Global_active_power, xlab="Global Active Power (kilowatts)", main="Global Active Power", col="red")
setwd("C:/Users/Geo Intelligence/Documents/R/")
data <- read.table("household_power_consumption.txt", header=TRUE, sep=";", na.strings="?", stringsAsFactors=FALSE)
data$Date <- as.Date(data$Date, "%d/%m/%Y")
subdata <- data[data$Date == as.Date("2007-02-01") | data$Date == as.Date("2007-02-02"),]
subdata$DateTime <- paste(subdata$Date, subdata$Time)
subdata$DateTime <- strptime(subdata$DateTime, format="%Y-%m-%d %H:%M:%S")
plot(subdata$DateTime,subdata$Global_active_power, type="l", xlab="", ylab="Global Active Power (kilowatts)" )
plot(subdata$DateTime,subdata$Global_reactive_power, type="l", xlab="datetime", ylab="Global_reactive_power")
Sys.setlocale("LC_TIME", "English")
par(c(2,2))
plot(subdata$DateTime,subdata$Global_active_power, type="l", xlab="", ylab="Global Active Power (kilowatts)" )
plot(subdata$DateTime,subdata$Voltage, type="l", xlab="datetime", ylab="Voltage" )
plot(subdata$DateTime,subdata$Sub_metering_1, type="l", xlab="", ylab="Energy Sub Metering" )
lines(subdata$DateTime,subdata$Sub_metering_2, col="red")
lines(subdata$DateTime,subdata$Sub_metering_3, col="blue")
legend("topright", lwd=1, col = c("black","red", "blue"), legend= c("Sub metering 1", "Sub metering 2", "Sub metering 3"))
plot(subdata$DateTime,subdata$Global_reactive_power, type="l", xlab="datetime", ylab="Global_reactive_power")
par(mfrow=c(2,2))
plot(subdata$DateTime,subdata$Global_active_power, type="l", xlab="", ylab="Global Active Power (kilowatts)" )
plot(subdata$DateTime,subdata$Voltage, type="l", xlab="datetime", ylab="Voltage" )
plot(subdata$DateTime,subdata$Sub_metering_1, type="l", xlab="", ylab="Energy Sub Metering" )
lines(subdata$DateTime,subdata$Sub_metering_2, col="red")
lines(subdata$DateTime,subdata$Sub_metering_3, col="blue")
legend("topright", lwd=1, col = c("black","red", "blue"), legend= c("Sub metering 1", "Sub metering 2", "Sub metering 3"))
plot(subdata$DateTime,subdata$Global_reactive_power, type="l", xlab="datetime", ylab="Global_reactive_power")
source('~/R/ExData_Plotting1/plot3.R')
Sys.setlocale("LC_TIME", "English")
# READ IN DATA
setwd("C:/Users/Geo Intelligence/Documents/R/")
data <- read.table("household_power_consumption.txt", header=TRUE, sep=";", na.strings="?", stringsAsFactors=FALSE)
data$Date <- as.Date(data$Date, "%d/%m/%Y")
subdata <- data[data$Date == as.Date("2007-02-01") | data$Date == as.Date("2007-02-02"),]
subdata$DateTime <- paste(subdata$Date, subdata$Time)
subdata$DateTime <- strptime(subdata$DateTime, format="%Y-%m-%d %H:%M:%S")
# Open PNG DEVICE
setwd("C:/Users/Geo Intelligence/Documents/R/ExData_Plotting1")
dev.set(3)
# Writing to PNG
png(filename = "plot4.png",
width = 480, height = 480)
# PLOT
par(mfrow=c(2,2))
plot(subdata$DateTime,subdata$Global_active_power, type="l", xlab="", ylab="Global Active Power" )
plot(subdata$DateTime,subdata$Voltage, type="l", xlab="datetime", ylab="Voltage" )
plot(subdata$DateTime,subdata$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering" )
lines(subdata$DateTime,subdata$Sub_metering_2, col="red")
lines(subdata$DateTime,subdata$Sub_metering_3, col="blue")
legend("topright", lwd=1, col = c("black","red", "blue"), legend= c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(subdata$DateTime,subdata$Global_reactive_power, type="l", xlab="datetime", ylab="Global_reactive_power")
# Closing PNG device
dev.off()
